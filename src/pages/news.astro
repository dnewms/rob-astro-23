---
import { homePagePostsQuery, collegeNewsQuery } from '../lib/api';
import MainLayout from "../layouts/MainLayout.astro";
import Icon from 'astro-icon';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import { Image } from 'astro:assets';
import featureImage from '../images/featured-images/news.jpg';


const collegeNewsItems = await collegeNewsQuery();
const { posts } = await homePagePostsQuery();
const recentPosts = posts.nodes.slice(0, 5);
const olderPosts = posts.nodes.slice(5);
const postsByCategory = olderPosts.reduce((acc, post) => {
  const category = post.categories.nodes[0]?.name || 'Uncategorized';
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(post);
  return acc;
}, {});

// Sort posts in each category by date and keep only the 4 most recent
Object.keys(postsByCategory).forEach(category => {
  postsByCategory[category].sort((a, b) => new Date(b.date) - new Date(a.date));
  postsByCategory[category] = postsByCategory[category].slice(0, 4);
});

const flattenedCategoryPosts = Object.values(postsByCategory).flat();

---
<MainLayout title="News and Events">
    <div class="max-w-6xl w-11/12 mx-auto py-2">
      <Breadcrumbs />
    </div>
    <div class="mt-4 mb-8 max-w-6xl w-11/12 mx-auto">
      <div class="relative rounded-sm overflow-hidden mb-8">
        <div class="relative">
          <div class="absolute inset-0">
            <Image 
              src={featureImage} 
              alt="Feature image description"
              width={1200}
              height={600}
              class="w-full h-full object-cover"
            />
          </div>
          <div class="relative">
            <div class="bg-umichblue/70 dark:bg-arboretumBlue/70 backdrop-blur-[2px] p-3 sm:p-4 md:p-8 inline-block">
              <h1 class="text-4xl font-roboto text-white font-bold">
                <span class="relative border-b-4 border-maize leading-relaxed sm:leading-tight group-hover:border-maize transition-all duration-300">News and events</span>
              </h1>
            </div>
          </div>
        </div>
      </div>
    
    
    <section class="mb-12">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {recentPosts.map((post, index) => (
          <a href={post.uri} class={`group block bg-white dark:bg-gray-800 shadow-md rounded-sm overflow-hidden hover:shadow-lg transition-all duration-300 hover:scale-[1.02] ${index === 0 ? 'md:col-span-2' : ''}`}>
            {post.featuredImage && (
              <img 
                src={post.featuredImage.node.sourceUrl} 
                alt={post.featuredImage.node.altText || post.title} 
                class={`w-full ${index === 0 ? 'h-96' : 'h-48'} object-cover`}
              />
            )}
            <div class="p-4">
              <h3 class="text-xl font-roboto font-bold mb-2 text-umichblue dark:text-gray-100 border-b-2 border-transparent group-hover:border-maize transition-all duration-300">{post.title}</h3>
              <p class="text-sm italic font-sans text-gray-600 dark:text-gray-400">
                  {new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                </p>
              {post.excerpt && (
                <p class="text-gray-600 dark:text-gray-400 mb-4" set:html={post.excerpt} />
              )}
            </div>
          </a>
        ))}
      </div>
    </section>
    <section class="mb-12">
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {flattenedCategoryPosts.map((post) => (
          <a href={post.uri} class="group bg-white dark:bg-gray-800 shadow-md rounded-sm overflow-hidden hover:shadow-lg transition-all duration-300 hover:scale-[1.02] flex flex-col">
            {post.featuredImage && (
              <img 
                src={post.featuredImage.node.sourceUrl} 
                alt={post.featuredImage.node.altText || post.title} 
                class="w-full h-48 object-cover hidden sm:block"
              />
            )}
            <div class="p-4 flex-grow flex flex-col justify-between">
              <div>
                <span class="inline-block text-xs font-medium mr-2 px-2.5 py-0.5 rounded-sm bg-arboretumBlue text-white mb-2">
                  {post.categories.nodes[0]?.name || 'Uncategorized'}
                </span>
                <h3 class="text-lg font-roboto font-bold text-umichblue dark:text-gray-100 mb-2 border-b-2 border-transparent group-hover:border-maize transition-all duration-300">{post.title}</h3>
                <p class="text-sm italic font-sans text-gray-600 dark:text-gray-400">
                  {new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                </p>
              </div>
            </div>
          </a>
        ))}
{collegeNewsItems && collegeNewsItems.length > 0 && collegeNewsItems.map((newsItem) => (
  <a href={newsItem.COLLEGE_LINK} class="group bg-white dark:bg-gray-800 shadow-md rounded-sm overflow-hidden hover:shadow-lg transition-all duration-300 hover:scale-[1.02] flex flex-col">
    <div class="p-4 flex-grow flex flex-col justify-between">
      <div>
        <span class="inline-block text-xs font-medium mr-2 px-2.5 py-0.5 rounded-sm border-arboretumBlue border-2 bg-white text-arboretumBlue mb-2">
          college news
        </span>
        <h3 class="text-lg font-roboto font-bold text-umichblue dark:text-gray-100 mb-2 border-b-2 border-transparent group-hover:border-maize transition-all duration-300">
          <span set:html={newsItem.COLLEGE_TITLE} />
          <Icon name="mdi:open-in-new" class="inline w-4 h-4 ml-1" />
        </h3>
        <p class="text-sm italic font-sans text-gray-600 dark:text-gray-400">
          {new Date(newsItem.COLLEGE_PUB_DATE).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
        </p>
      </div>
    </div>
  </a>
))}

      </div>
    </section>
</MainLayout>
