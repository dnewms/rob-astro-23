---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
  image: ImageMetadata;
  imageAlt: string;
  title?: string;
  subtitle: string; // date
  name: string;
  role: string;
  website?: string;
  isExpanded?: boolean;
}

const { image, imageAlt, title = '', subtitle, name, role, website, isExpanded = false } = Astro.props;
---

<div class="speaker-profile my-6 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden">
  <button 
    class="w-full text-left p-4 bg-gray-50 dark:bg-gray-800 hover:bg-blue-50 dark:hover:bg-gray-600 transition-colors cursor-pointer flex items-center justify-between"
    aria-expanded={isExpanded}
    data-speaker-button
  >
    <div class="flex items-center gap-4">
      <div class="w-16 h-16 shrink-0">
        <Image 
          src={image} 
          alt={imageAlt}
          width={256}
          height={256}
          class="rounded-full w-full h-full object-cover not-prose"
        />
      </div>
      <div>
        <p class="text-gray-600 dark:text-gray-200 text-sm">{subtitle}</p>
        <h3 class="text-xl font-bold dark:text-white mt-0">{title}</h3>
        <p class="text-gray-700 dark:text-gray-300">{name} - <span class="italic">{role}</span></p>
      </div>
    </div>
    <svg 
      class="expand-icon w-6 h-6 transform transition-transform duration-200 text-gray-500 dark:text-gray-400" 
      fill="none" 
      stroke="currentColor" 
      viewBox="0 0 24 24"
      data-expand-icon
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>

  <div class={`content ${isExpanded ? '' : 'hidden'}`} data-content>
    <div class="p-6 bg-white dark:bg-gray-900">
      <div class="flex flex-col md:flex-row gap-8">
        <div class="md:w-1/4">
          <Image 
            src={image} 
            alt={imageAlt}
            width={400}
            height={400}
            class="rounded-lg w-full"
          />
          {website && (
            <a 
              href={website} 
              target="_blank"
              rel="noopener noreferrer" 
              class="mt-4 block text-center px-4 py-2 bg-maize text-umichblue no-underline rounded hover:bg-maize/40 transition-colors"
            >
              Visit Website
            </a>
          )}
        </div>
        <div class="md:w-3/4">
          <div class="prose dark:prose-invert max-w-none">
            <slot />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function setupSpeakerProfile() {
    const profiles = document.querySelectorAll('.speaker-profile');
    
    profiles.forEach(profile => {
      const button = profile.querySelector('[data-speaker-button]');
      const content = profile.querySelector('[data-content]');
      const expandIcon = profile.querySelector('[data-expand-icon]') as HTMLElement;
      
      if (button && content && expandIcon) {
        button.addEventListener('click', () => {
          const isExpanded = button.getAttribute('aria-expanded') === 'true';
          button.setAttribute('aria-expanded', (!isExpanded).toString());
          content.classList.toggle('hidden');
          expandIcon.style.transform = isExpanded ? '' : 'rotate(180deg)';
        });
      }
    });
  }

  // Run on initial load
  setupSpeakerProfile();

  // Run on client-side navigation
  document.addEventListener('astro:page-load', setupSpeakerProfile);
</script>

<style>
  .expand-icon {
    transition: transform 0.2s ease-in-out;
  }
</style> 