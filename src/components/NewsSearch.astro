---
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';

const [allPosts, allCollegePosts] = await Promise.all([
  getCollection('news'),
  getCollection('collegeNews')
]);

// Prepare search data
const searchableNews = [
  ...allPosts.map(post => ({
    title: post.data.title,
    date: post.data.date,
    url: `/news/${new Date(post.data.date).getFullYear()}/${post.id.split('/')[1]}`,
    category: post.data.categories?.[0] || 'Uncategorized',
    excerpt: post.data.excerpt || '',
    type: 'robotics'
  })),
  ...allCollegePosts.map(post => ({
    title: post.data.title,
    date: post.data.date,
    url: post.data.link,
    category: post.data.categories?.[0] || 'College News',
    excerpt: post.data.description || '',
    type: 'college'
  }))
];

---

<div class="search-container">
  <div class="relative">
    <input 
      type="text" 
      id="searchInput" 
      placeholder="Search news..."
      class="w-full px-4 py-2 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-umichblue"
    />
    <Icon name="mdi:magnify" class="absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
  </div>
  <div id="searchResults" class="search-results hidden"></div>
</div>

<script define:vars={{ searchableNews }}>
  const searchInput = document.getElementById('searchInput');
  const searchResults = document.getElementById('searchResults');

  searchInput.addEventListener('input', (e) => {
    const searchTerm = e.target.value.toLowerCase();
    
    if (searchTerm.length < 2) {
      searchResults.innerHTML = '';
      searchResults.classList.add('hidden');
      return;
    }

    const filteredNews = searchableNews.filter(news => 
      news.title.toLowerCase().includes(searchTerm) ||
      news.excerpt.toLowerCase().includes(searchTerm) ||
      news.category.toLowerCase().includes(searchTerm)
    )
    .sort((a, b) => new Date(b.date) - new Date(a.date))
    .slice(0, 5);

    if (filteredNews.length > 0) {
      const resultsHtml = filteredNews
        .map(news => `
          <div class="block p-4 hover:bg-gray-50 dark:hover:bg-gray-700 border-b border-gray-300 dark:border-gray-700 transition-colors duration-200">
            <a href="${news.url}" class="block" ${news.type === 'college' ? 'target="_blank" rel="noopener noreferrer"' : ''}>
              <div class="flex flex-col">
                <span class="inline-block text-xs font-medium px-2.5 py-0.5 rounded-sm bg-arboretumBlue text-white mb-1 w-fit">
                  ${news.category.replace(/-/g, ' ')}
                </span>
                <div class="flex items-start gap-1">
                  <h3 class="text-lg leading-tight font-roboto font-bold text-umichblue dark:text-gray-100">${news.title}</h3>
                  ${news.type === 'college' ? '<svg class="inline w-4 h-4 mt-1 text-gray-800 dark:text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/></svg>' : ''}
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-300">
                  ${new Date(news.date).toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                  })}
                </p>
              </div>
            </a>
          </div>
        `)
        .join('');
      
      searchResults.innerHTML = resultsHtml;
      searchResults.classList.remove('hidden');
    } else {
      searchResults.innerHTML = `
        <div class="p-4 text-gray-600 dark:text-gray-400">
          No related robotics news found :(
        </div>
      `;
      searchResults.classList.remove('hidden');
    }
  });

  // Close search results when clicking outside
  document.addEventListener('click', (e) => {
    if (!e.target.closest('.search-container')) {
      searchResults.classList.add('hidden');
    }
  });
</script>

<style>
  .search-container {
    position: relative;
    width: 100%;
    min-height: 42px;
  }

  .search-results {
    position: absolute;
    width: 100%;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #ddd;
    border-radius: 0.375rem;
    margin-top: 0.5rem;
    max-height: 400px;
    overflow-y: auto;
    z-index: 50;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }

  @media (prefers-color-scheme: dark) {
    .search-results {
      background: #1f2937;
      border-color: #374151;
    }
  }
</style> 