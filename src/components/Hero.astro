---
import { Icon } from 'astro-icon/components';
import Link from '../components/Link.astro';

// Use the same getLink logic for media paths
const getLink = (path: string) => {
  if (import.meta.env.DEV) {
    return `http://localhost:4321${path}`;
  }
  const baseURL = import.meta.env.BASE_URL;
  return baseURL.endsWith('/') ? baseURL + path.slice(1) : baseURL + path;
};

const videoMp4Path = getLink('/robotics-promo-2025.mp4');
const videoWebmPath = getLink('/robotics-promo-2025.webm');
const posterPath = getLink('/blue-tile.png');

---

<section class="my-4 md:mb-28">
  <div class="relative justify-center min-h-[350px]">
    <div class="relative flex flex-wrap items-center justify-center min-h-[350px] overflow-hidden mb-14 md:mb-12">
      <div class="relative z-10 p-5 text-4xl text-white font-roboto-condensed font-bold text-center">
        Work together. Create smart machines. Serve society.
      </div>

      <div class="absolute inset-0 w-full h-full bg-umichblue">
        <video 
          id="hero-video"
          class="absolute inset-0 w-full h-full object-cover opacity-0 transition-opacity duration-300"
          playsinline
          muted
          preload="none"
          aria-label="Background video showing Michigan Robotics research and education"
        >
          <source src={videoWebmPath} type="video/webm">
          <source src={videoMp4Path} type="video/mp4">
          <p>Your browser doesn't support HTML5 video. Here is a <a href={videoMp4Path}>link to the video</a> instead.</p>
        </video>

        <button 
          id="video-control"
          class="absolute z-30 bottom-4 right-4 rounded-full bg-black/50 hover:bg-black/70 p-3 transition-colors focus:outline-none focus:ring-2 focus:ring-white hidden"
          aria-label="Toggle video playback"
        >
          <span class="sr-only">Toggle video playback</span>
          <Icon name="mdi:pause" class="w-6 h-6 text-white pause-icon" />
          <Icon name="mdi:play" class="w-6 h-6 text-white play-icon hidden" />
        </button>

        <div id="loading-indicator" class="absolute inset-0 flex items-center justify-center bg-black/50">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-white"></div>
        </div>
      </div>
    </div>

    <div class="hidden md:block font-roboto-condensed text-xl absolute z-50 -bottom-10 m-auto bg-lawQuadStone bg-opacity-80 overflow-visible inset-x-4 lg:inset-x-1/4 rounded-sm p-6 drop-shadow-lg text-white text-justify border border-white/20 backdrop-blur-sm">
      The <strong>Robotics Department</strong> at the <strong>University of Michigan</strong> is creating the next generation of robotics and roboticists as force-multipliers for the benefit of society. 
    </div>
  </div>
</section>

<script>
  const video = document.getElementById('hero-video') as HTMLVideoElement;
  const control = document.getElementById('video-control') as HTMLButtonElement;
  const loadingIndicator = document.getElementById('loading-indicator') as HTMLDivElement;
  
  if (video && control && loadingIndicator) {
    const pauseIcon = control.querySelector('.pause-icon');
    const playIcon = control.querySelector('.play-icon');
    let isVideoSupported = true;

    // Check if video playback is supported
    function checkVideoSupport() {
      const canPlay = video.canPlayType('video/mp4');
      if (canPlay === '') {
        isVideoSupported = false;
        loadingIndicator.remove();
        return false;
      }
      return true;
    }

    // Add loading event listeners
    video.addEventListener('loadeddata', () => {
      if (isVideoSupported) {
        video.classList.remove('opacity-0');
        loadingIndicator.remove();
        control.classList.remove('hidden');
        tryPlayVideo();
      }
    });

    // Attempt to play video
    async function tryPlayVideo() {
      if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        try {
          await video.play();
        } catch (error) {
          showFallback();
        }
      }
    }

    // Toggle play/pause
    control.addEventListener('click', () => {
      if (video.paused) {
        video.play();
        pauseIcon?.classList.remove('hidden');
        playIcon?.classList.add('hidden');
      } else {
        video.pause();
        pauseIcon?.classList.add('hidden');
        playIcon?.classList.remove('hidden');
      }
    });

    // Update button state on video events
    video.addEventListener('pause', () => {
      pauseIcon?.classList.add('hidden');
      playIcon?.classList.remove('hidden');
    });

    video.addEventListener('play', () => {
      pauseIcon?.classList.remove('hidden');
      playIcon?.classList.add('hidden');
    });

    // Check video support and try to load
    if (checkVideoSupport()) {
      video.load();
    }
  }
</script>

<style>
  /* Smooth transitions */
  #hero-video, #fallback-image {
    transition: opacity 0.3s ease-in-out;
  }

  /* Ensure video fills container while maintaining aspect ratio */
  video {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  /* Reduced motion preference */
  @media (prefers-reduced-motion: reduce) {
    video {
      display: none;
    }
    #fallback-image {
      opacity: 1 !important;
    }
    #video-control {
      display: none !important;
    }
  }
</style>
